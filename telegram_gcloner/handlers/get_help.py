#!/usr/bin/python3
# -*- coding: utf-8 -*-
import logging

from telegram.ext import Dispatcher, CommandHandler

from utils.config_loader import config
from utils.callback import callback_delete_message
from utils.restricted import restricted

logger = logging.getLogger(__name__)


def init(dispatcher: Dispatcher):
    """Provide handlers initialization."""
    dispatcher.add_handler(CommandHandler('help', get_help))


@restricted
def get_help(update, context):
    message = 'Google Drive linkini gÃ¶nderin, veya Google drive linki olan bir dosyayÄ± elle transfer iÃ§in iletin.\n' \
              'YapÄ±landÄ±rmak iÃ§in /sa ve /folders komutlarÄ± gereklidir.\n\n' \
              'ğŸ“š Komutlar:\n' \
              ' â”‚ /start - Botu baÅŸlatÄ±r.' \
              ' â”‚ /folders - favori klasÃ¶rÃ¼ seÃ§er.' \
              ' â”‚ /sa - Sadece direkt mesajda. Ä°Ã§inde Servis hesaplarÄ± olan dosyayÄ± seÃ§menize olanak saÄŸlar.\n' \
              ' â”‚ /ban - Bir kiÅŸi, bu botu kullanmaktan men eder.' \
              ' â”‚ /unban - Men edilmiÅŸ kullanÄ±cÄ±nÄ±n bota eriÅŸmesine tekrar izin verilir.' \
              ' â”‚ /id - KullanÄ±cÄ± ID\'ni verir.' \
              ' â”‚ /contact - Botun sahibine mesaj gÃ¶nderir.' \
              ' â”‚ /help - Bu mesajÄ± gÃ¶nderir.\n'

    rsp = update.message.reply_text(message)
    rsp.done.wait(timeout=60)
    message_id = rsp.result().message_id
    if update.message.chat_id < 0:
        context.job_queue.run_once(callback_delete_message, config.TIMER_TO_DELETE_MESSAGE,
                                   context=(update.message.chat_id, message_id))
        context.job_queue.run_once(callback_delete_message, config.TIMER_TO_DELETE_MESSAGE,
                                   context=(update.message.chat_id, update.message.message_id))
